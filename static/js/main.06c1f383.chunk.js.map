{"version":3,"sources":["contexts/LanguageContext.js","contexts/ColorContext.js","components/Field.js","components/Button.js","components/UserCreate.js","components/LanguageSelector.js","components/App.js","index.js"],"names":["Context","createContext","LanguageStore","state","language","onLanguageChange","setState","Provider","value","this","props","children","Component","Field","text","context","className","contextType","LanguageContext","Button","colorValue","Consumer","renderSubmit","ColorContext","renderButton","UserCreate","LanguageSelector","onClick","style","cursor","App","ReactDOM","render","document","getElementById"],"mappings":"mLAKMA,EAAUC,wBAAc,WAEjBC,EAAb,4MACEC,MAAQ,CAAEC,SAAU,WADtB,EAGEC,iBAAmB,SAACD,GAClB,EAAKE,SAAS,CAAEF,cAJpB,4CAME,WACE,OACE,cAACJ,EAAQO,SAAT,CACEC,MAAK,2BAAOC,KAAKN,OAAZ,IAAmBE,iBAAkBI,KAAKJ,mBADjD,SAGGI,KAAKC,MAAMC,eAXpB,GAAmCC,aAiBpBZ,ICtBAC,4BCETY,E,4JAGJ,WACE,IAAMC,EAAiC,YAA1BL,KAAKM,QAAQX,SAAyB,OAAS,OAC5D,OACE,sBAAKY,UAAU,WAAf,UACE,gCAAQF,IACR,iC,GARYF,aAAdC,EACGI,YAAcC,EAaRL,QCsBAM,E,kKA3Bb,SAAaf,GACX,MAAoB,YAAbA,EAAyB,SAAW,e,0BAG7C,SAAagB,GAAa,IAAD,OACvB,OACE,wBAAQJ,UAAS,oBAAeI,GAAhC,SAIE,cAACF,EAAgBG,SAAjB,UACG,gBAAGjB,EAAH,EAAGA,SAAH,OAAkB,EAAKkB,aAAalB,U,oBAM7C,WAAU,IAAD,OAEP,OACE,cAACmB,EAAaF,SAAd,UACG,SAACD,GAAD,OAAgB,EAAKI,aAAaJ,U,GAxBtBR,aCINa,EATI,WACjB,OACE,sBAAKT,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCLAU,E,4JAGJ,WAAU,IAAD,OACP,OACE,qDAEE,mBACEV,UAAU,UACVW,QAAS,kBAAM,EAAKZ,QAAQV,iBAAiB,YAC7CuB,MAAO,CAAEC,OAAQ,aAEnB,mBACEb,UAAU,UACVW,QAAS,kBAAM,EAAKZ,QAAQV,iBAAiB,UAC7CuB,MAAO,CAAEC,OAAQ,oB,GAfIjB,aAAzBc,EACGT,YAAcC,EAqBRQ,QCDAI,E,4JAjBb,WACE,OACE,qBAAKd,UAAU,eAAf,SAIE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAACO,EAAahB,SAAd,CAAuBC,MAAO,MAA9B,SACE,cAAC,EAAD,e,GAVMI,aCFlBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.06c1f383.chunk.js","sourcesContent":["import React, { createContext, Component } from \"react\";\r\n\r\n//this create a context object\r\n\r\n//english will be the default value for the context object\r\nconst Context = createContext(\"english\");\r\n\r\nexport class LanguageStore extends Component {\r\n  state = { language: \"english\" };\r\n\r\n  onLanguageChange = (language) => {\r\n    this.setState({ language });\r\n  };\r\n  render() {\r\n    return (\r\n      <Context.Provider\r\n        value={{ ...this.state, onLanguageChange: this.onLanguageChange }}\r\n      >\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Context;\r\n","import { createContext } from \"react\";\r\n\r\nexport default createContext();\r\n","import React, { Component } from \"react\";\r\n\r\nimport LanguageContext from \"../contexts/LanguageContext\";\r\n\r\nclass Field extends Component {\r\n  static contextType = LanguageContext;\r\n\r\n  render() {\r\n    const text = this.context.language === \"english\" ? \"Name\" : \"Naam\";\r\n    return (\r\n      <div className=\"ui field\">\r\n        <label>{text}</label>\r\n        <input />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Field;\r\n","import React, { Component } from \"react\";\r\nimport LanguageContext from \"../contexts/LanguageContext\";\r\nimport ColorContext from \"../contexts/ColorContext\";\r\n\r\n//creating a contextType links the nexted child (button component) with the context object\r\n//this.context will reference the actual values in the context object\r\n\r\n//links context object to a class component\r\n//static contextType adds a property to the class itself\r\n//contexttype is only required when we want to use this.context\r\nclass Button extends Component {\r\n  // static contextType = LanguageContext;\r\n\r\n  renderSubmit(language) {\r\n    return language === \"english\" ? \"Submit\" : \"Voorleggen\";\r\n  }\r\n\r\n  renderButton(colorValue) {\r\n    return (\r\n      <button className={`ui button ${colorValue}`}>\r\n        {/* {text} */}\r\n        {/* whenever we use the consumer we always pass one child function\r\n    this always gets called by the consumer with whatever value is in the pipe */}\r\n        <LanguageContext.Consumer>\r\n          {({ language }) => this.renderSubmit(language)}\r\n        </LanguageContext.Consumer>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // const text = this.context === \"english\" ? \"Submit\" : \"Voorleggen\";\r\n    return (\r\n      <ColorContext.Consumer>\r\n        {(colorValue) => this.renderButton(colorValue)}\r\n      </ColorContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Field from \"./Field\";\r\nimport Button from \"./Button\";\r\n\r\nconst UserCreate = () => {\r\n  return (\r\n    <div className=\"ui form\">\r\n      <Field />\r\n      <Button />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCreate;\r\n","import React, { Component } from \"react\";\r\n\r\nimport LanguageContext from \"../contexts/LanguageContext\";\r\n\r\nclass LanguageSelector extends Component {\r\n  static contextType = LanguageContext;\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Select a language:\r\n        <i\r\n          className=\"flag us\"\r\n          onClick={() => this.context.onLanguageChange(\"english\")}\r\n          style={{ cursor: \"pointer\" }}\r\n        />\r\n        <i\r\n          className=\"flag nl\"\r\n          onClick={() => this.context.onLanguageChange(\"dutch\")}\r\n          style={{ cursor: \"pointer\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LanguageSelector;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { LanguageStore } from \"../contexts/LanguageContext\";\r\nimport ColorContext from \"../contexts/ColorContext\";\r\nimport UserCreate from \"./UserCreate\";\r\nimport LanguageSelector from \"./LanguageSelector\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        {/* when we render this, we need to provide a 'value' prop \r\n        the provider gives you access to change the default value*/}\r\n\r\n        <LanguageStore>\r\n          <LanguageSelector />\r\n          <ColorContext.Provider value={\"red\"}>\r\n            <UserCreate />\r\n          </ColorContext.Provider>\r\n        </LanguageStore>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}